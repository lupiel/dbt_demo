
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_demo'
version: '1.0.0'
config-version: 2

vars:
  council_districts: "(1, 3, 5, 8, 9, 10)"

# This setting configures which "profile" dbt uses for this project.
profile: 'bigquery'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

on-run-start: "create table if not exists `marine-booth-404312.dbt_demo.log` (message string);insert into `marine-booth-404312.dbt_demo.log` values ('run_start')"
on-run-end: "insert into `marine-booth-404312.dbt_demo.log` values ('run_end')"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  pre-hook: "insert into `marine-booth-404312.dbt_demo.log` values ('model_start')"
  post-hook: "insert into `marine-booth-404312.dbt_demo.log` values ('model_end')"
  dbt_demo:
    staging:
      +materialized: table
      +schema: dbt_staging
    austin_bikeshare:
      +materialized: view
      +schema: dbt_austin_bikeshare

